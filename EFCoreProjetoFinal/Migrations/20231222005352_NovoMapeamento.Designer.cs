// <auto-generated />
using System;
using EFCoreProjetoFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreProjetoFinal.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231222005352_NovoMapeamento")]
    partial class NovoMapeamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.CodigoAcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("DataAtivacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Codigos");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Estudio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Estudios", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.EstudioJogo", b =>
                {
                    b.Property<Guid>("JogosId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JogosId");

                    b.Property<Guid>("EstudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EstudioId");

                    b.HasKey("JogosId", "EstudioId");

                    b.HasIndex("EstudioId");

                    b.ToTable("EstudioJogo", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Generos", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.GeneroJogo", b =>
                {
                    b.Property<Guid>("JogosId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JogosId");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GeneroId");

                    b.HasKey("JogosId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("GeneroJogo", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("EstudioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PlataformaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAcessoId");

                    b.ToTable("Jogos", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.JogoPlataforma", b =>
                {
                    b.Property<Guid>("JogosId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JogosId");

                    b.Property<Guid>("PlataformaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EstudioId");

                    b.HasKey("JogosId", "PlataformaId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("JogoPlataforma", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Plataforma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Plataformas", (string)null);
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.EstudioJogo", b =>
                {
                    b.HasOne("EFCoreProjetoFinal.Domain.Estudio", "Estudio")
                        .WithMany("EstudioJogo")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EFCoreProjetoFinal.Domain.Jogo", "Jogo")
                        .WithMany("EstudioJogo")
                        .HasForeignKey("JogosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estudio");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.GeneroJogo", b =>
                {
                    b.HasOne("EFCoreProjetoFinal.Domain.Genero", "Genero")
                        .WithMany("GeneroJogo")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EFCoreProjetoFinal.Domain.Jogo", "Jogo")
                        .WithMany("GeneroJogo")
                        .HasForeignKey("JogosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Jogo", b =>
                {
                    b.HasOne("EFCoreProjetoFinal.Domain.CodigoAcesso", "CodigoAcesso")
                        .WithMany("Jogos")
                        .HasForeignKey("CodigoAcessoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CodigoAcesso");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.JogoPlataforma", b =>
                {
                    b.HasOne("EFCoreProjetoFinal.Domain.Jogo", "Jogo")
                        .WithMany("JogoPlataforma")
                        .HasForeignKey("JogosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EFCoreProjetoFinal.Domain.Plataforma", "Plataforma")
                        .WithMany("JogoPlataforma")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Plataforma");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.CodigoAcesso", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Estudio", b =>
                {
                    b.Navigation("EstudioJogo");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Genero", b =>
                {
                    b.Navigation("GeneroJogo");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Jogo", b =>
                {
                    b.Navigation("EstudioJogo");

                    b.Navigation("GeneroJogo");

                    b.Navigation("JogoPlataforma");
                });

            modelBuilder.Entity("EFCoreProjetoFinal.Domain.Plataforma", b =>
                {
                    b.Navigation("JogoPlataforma");
                });
#pragma warning restore 612, 618
        }
    }
}
